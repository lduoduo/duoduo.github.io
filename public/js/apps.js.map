{"version":3,"names":[],"mappings":"","sources":["apps.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nvar option = {\r\n    cache: false,\r\n    jsonpCallback: \"handler\",\r\n}\r\n\r\nfunction Ajax(type) {\r\n    // console.log(arguments);\r\n\r\n    var tmp = {\r\n        type: arguments[0],\r\n        dataType: arguments[0] == 'jsonp' ? 'jsonp' : 'json'\r\n    };\r\n    return function (url, para, cb, err, env) {\r\n        $.extend(option, tmp, {\r\n            // processData: false, //此处指定对上传数据不做默认的读取字符串的操作\r\n            // contentType: false, //此处指定对上传数据不做默认的读取字符串的操作\r\n            success: function (res) {\r\n                cb && cb(res, para, env);\r\n            },\r\n            error: function (e) {\r\n                alert(JSON.stringify(e));\r\n                err && err(e, env);\r\n            }\r\n        });\r\n        option.url = url;\r\n        option.data = para ? para : '';\r\n        $.ajax(option);\r\n    }\r\n}\r\n\r\nvar ajax = {\r\n    json: new Ajax('get'),\r\n    jsonp: new Ajax('get', 'jsonp'),\r\n    post: new Ajax('post'),\r\n    postp: new Ajax('post', 'jsonp')\r\n};\r\nmodule.exports = ajax;\r\n\n},{}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n\n/*!\n * EJS\n * Copyright(c) 2012 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils')\n  , path = require('path')\n  , dirname = path.dirname\n  , extname = path.extname\n  , join = path.join\n  , fs = require('fs')\n  , read = fs.readFileSync;\n\n/**\n * Filters.\n *\n * @type Object\n */\n\nvar filters = exports.filters = require('./filters');\n\n/**\n * Intermediate js cache.\n *\n * @type Object\n */\n\nvar cache = {};\n\n/**\n * Clear intermediate js cache.\n *\n * @api public\n */\n\nexports.clearCache = function(){\n  cache = {};\n};\n\n/**\n * Translate filtered code into function calls.\n *\n * @param {String} js\n * @return {String}\n * @api private\n */\n\nfunction filtered(js) {\n  return js.substr(1).split('|').reduce(function(js, filter){\n    var parts = filter.split(':')\n      , name = parts.shift()\n      , args = parts.join(':') || '';\n    if (args) args = ', ' + args;\n    return 'filters.' + name + '(' + js + args + ')';\n  });\n};\n\n/**\n * Re-throw the given `err` in context to the\n * `str` of ejs, `filename`, and `lineno`.\n *\n * @param {Error} err\n * @param {String} str\n * @param {String} filename\n * @param {String} lineno\n * @api private\n */\n\nfunction rethrow(err, str, filename, lineno){\n  var lines = str.split('\\n')\n    , start = Math.max(lineno - 3, 0)\n    , end = Math.min(lines.length, lineno + 3);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? ' >> ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'ejs') + ':'\n    + lineno + '\\n'\n    + context + '\\n\\n'\n    + err.message;\n\n  throw err;\n}\n\n/**\n * Parse the given `str` of ejs, returning the function body.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nvar parse = exports.parse = function(str, options){\n  var options = options || {}\n    , open = options.open || exports.open || '<%'\n    , close = options.close || exports.close || '%>'\n    , filename = options.filename\n    , compileDebug = options.compileDebug !== false\n    , buf = \"\";\n\n  buf += 'var buf = [];';\n  if (false !== options._with) buf += '\\nwith (locals || {}) { (function(){ ';\n  buf += '\\n buf.push(\\'';\n\n  var lineno = 1;\n\n  var consumeEOL = false;\n  for (var i = 0, len = str.length; i < len; ++i) {\n    var stri = str[i];\n    if (str.slice(i, open.length + i) == open) {\n      i += open.length\n\n      var prefix, postfix, line = (compileDebug ? '__stack.lineno=' : '') + lineno;\n      switch (str[i]) {\n        case '=':\n          prefix = \"', escape((\" + line + ', ';\n          postfix = \")), '\";\n          ++i;\n          break;\n        case '-':\n          prefix = \"', (\" + line + ', ';\n          postfix = \"), '\";\n          ++i;\n          break;\n        default:\n          prefix = \"');\" + line + ';';\n          postfix = \"; buf.push('\";\n      }\n\n      var end = str.indexOf(close, i);\n\n      if (end < 0){\n        throw new Error('Could not find matching close tag \"' + close + '\".');\n      }\n\n      var js = str.substring(i, end)\n        , start = i\n        , include = null\n        , n = 0;\n\n      if ('-' == js[js.length-1]){\n        js = js.substring(0, js.length - 2);\n        consumeEOL = true;\n      }\n\n      if (0 == js.trim().indexOf('include')) {\n        var name = js.trim().slice(7).trim();\n        if (!filename) throw new Error('filename option is required for includes');\n        var path = resolveInclude(name, filename);\n        include = read(path, 'utf8');\n        include = exports.parse(include, { filename: path, _with: false, open: open, close: close, compileDebug: compileDebug });\n        buf += \"' + (function(){\" + include + \"})() + '\";\n        js = '';\n      }\n\n      while (~(n = js.indexOf(\"\\n\", n))) n++, lineno++;\n      if (js.substr(0, 1) == ':') js = filtered(js);\n      if (js) {\n        if (js.lastIndexOf('//') > js.lastIndexOf('\\n')) js += '\\n';\n        buf += prefix;\n        buf += js;\n        buf += postfix;\n      }\n      i += end - start + close.length - 1;\n\n    } else if (stri == \"\\\\\") {\n      buf += \"\\\\\\\\\";\n    } else if (stri == \"'\") {\n      buf += \"\\\\'\";\n    } else if (stri == \"\\r\") {\n      // ignore\n    } else if (stri == \"\\n\") {\n      if (consumeEOL) {\n        consumeEOL = false;\n      } else {\n        buf += \"\\\\n\";\n        lineno++;\n      }\n    } else {\n      buf += stri;\n    }\n  }\n\n  if (false !== options._with) buf += \"'); })();\\n} \\nreturn buf.join('');\";\n  else buf += \"');\\nreturn buf.join('');\";\n  return buf;\n};\n\n/**\n * Compile the given `str` of ejs into a `Function`.\n *\n * @param {String} str\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nvar compile = exports.compile = function(str, options){\n  options = options || {};\n  var escape = options.escape || utils.escape;\n\n  var input = JSON.stringify(str)\n    , compileDebug = options.compileDebug !== false\n    , client = options.client\n    , filename = options.filename\n        ? JSON.stringify(options.filename)\n        : 'undefined';\n\n  if (compileDebug) {\n    // Adds the fancy stack trace meta info\n    str = [\n      'var __stack = { lineno: 1, input: ' + input + ', filename: ' + filename + ' };',\n      rethrow.toString(),\n      'try {',\n      exports.parse(str, options),\n      '} catch (err) {',\n      '  rethrow(err, __stack.input, __stack.filename, __stack.lineno);',\n      '}'\n    ].join(\"\\n\");\n  } else {\n    str = exports.parse(str, options);\n  }\n\n  if (options.debug) console.log(str);\n  if (client) str = 'escape = escape || ' + escape.toString() + ';\\n' + str;\n\n  try {\n    var fn = new Function('locals, filters, escape, rethrow', str);\n  } catch (err) {\n    if ('SyntaxError' == err.name) {\n      err.message += options.filename\n        ? ' in ' + filename\n        : ' while compiling ejs';\n    }\n    throw err;\n  }\n\n  if (client) return fn;\n\n  return function(locals){\n    return fn.call(this, locals, filters, escape, rethrow);\n  }\n};\n\n/**\n * Render the given `str` of ejs.\n *\n * Options:\n *\n *   - `locals`          Local variables object\n *   - `cache`           Compiled functions are cached, requires `filename`\n *   - `filename`        Used by `cache` to key caches\n *   - `scope`           Function execution context\n *   - `debug`           Output generated function body\n *   - `open`            Open tag, defaulting to \"<%\"\n *   - `close`           Closing tag, defaulting to \"%>\"\n *\n * @param {String} str\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nexports.render = function(str, options){\n  var fn\n    , options = options || {};\n\n  if (options.cache) {\n    if (options.filename) {\n      fn = cache[options.filename] || (cache[options.filename] = compile(str, options));\n    } else {\n      throw new Error('\"cache\" option requires \"filename\".');\n    }\n  } else {\n    fn = compile(str, options);\n  }\n\n  options.__proto__ = options.locals;\n  return fn.call(options.scope, options);\n};\n\n/**\n * Render an EJS file at the given `path` and callback `fn(err, str)`.\n *\n * @param {String} path\n * @param {Object|Function} options or callback\n * @param {Function} fn\n * @api public\n */\n\nexports.renderFile = function(path, options, fn){\n  var key = path + ':string';\n\n  if ('function' == typeof options) {\n    fn = options, options = {};\n  }\n\n  options.filename = path;\n\n  var str;\n  try {\n    str = options.cache\n      ? cache[key] || (cache[key] = read(path, 'utf8'))\n      : read(path, 'utf8');\n  } catch (err) {\n    fn(err);\n    return;\n  }\n  fn(null, exports.render(str, options));\n};\n\n/**\n * Resolve include `name` relative to `filename`.\n *\n * @param {String} name\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nfunction resolveInclude(name, filename) {\n  var path = join(dirname(filename), name);\n  var ext = extname(name);\n  if (!ext) path += '.ejs';\n  return path;\n}\n\n// express support\n\nexports.__express = exports.renderFile;\n\n/**\n * Expose to require().\n */\n\nif (require.extensions) {\n  require.extensions['.ejs'] = function (module, filename) {\n    filename = filename || module.filename;\n    var options = { filename: filename, client: true }\n      , template = fs.readFileSync(filename).toString()\n      , fn = compile(template, options);\n    module._compile('module.exports = ' + fn.toString() + ';', filename);\n  };\n} else if (require.registerExtension) {\n  require.registerExtension('.ejs', function(src) {\n    return compile(src, {});\n  });\n}\n\n},{\"./filters\":4,\"./utils\":5,\"fs\":2,\"path\":6}],4:[function(require,module,exports){\n/*!\n * EJS - Filters\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * First element of the target `obj`.\n */\n\nexports.first = function(obj) {\n  return obj[0];\n};\n\n/**\n * Last element of the target `obj`.\n */\n\nexports.last = function(obj) {\n  return obj[obj.length - 1];\n};\n\n/**\n * Capitalize the first letter of the target `str`.\n */\n\nexports.capitalize = function(str){\n  str = String(str);\n  return str[0].toUpperCase() + str.substr(1, str.length);\n};\n\n/**\n * Downcase the target `str`.\n */\n\nexports.downcase = function(str){\n  return String(str).toLowerCase();\n};\n\n/**\n * Uppercase the target `str`.\n */\n\nexports.upcase = function(str){\n  return String(str).toUpperCase();\n};\n\n/**\n * Sort the target `obj`.\n */\n\nexports.sort = function(obj){\n  return Object.create(obj).sort();\n};\n\n/**\n * Sort the target `obj` by the given `prop` ascending.\n */\n\nexports.sort_by = function(obj, prop){\n  return Object.create(obj).sort(function(a, b){\n    a = a[prop], b = b[prop];\n    if (a > b) return 1;\n    if (a < b) return -1;\n    return 0;\n  });\n};\n\n/**\n * Size or length of the target `obj`.\n */\n\nexports.size = exports.length = function(obj) {\n  return obj.length;\n};\n\n/**\n * Add `a` and `b`.\n */\n\nexports.plus = function(a, b){\n  return Number(a) + Number(b);\n};\n\n/**\n * Subtract `b` from `a`.\n */\n\nexports.minus = function(a, b){\n  return Number(a) - Number(b);\n};\n\n/**\n * Multiply `a` by `b`.\n */\n\nexports.times = function(a, b){\n  return Number(a) * Number(b);\n};\n\n/**\n * Divide `a` by `b`.\n */\n\nexports.divided_by = function(a, b){\n  return Number(a) / Number(b);\n};\n\n/**\n * Join `obj` with the given `str`.\n */\n\nexports.join = function(obj, str){\n  return obj.join(str || ', ');\n};\n\n/**\n * Truncate `str` to `len`.\n */\n\nexports.truncate = function(str, len, append){\n  str = String(str);\n  if (str.length > len) {\n    str = str.slice(0, len);\n    if (append) str += append;\n  }\n  return str;\n};\n\n/**\n * Truncate `str` to `n` words.\n */\n\nexports.truncate_words = function(str, n){\n  var str = String(str)\n    , words = str.split(/ +/);\n  return words.slice(0, n).join(' ');\n};\n\n/**\n * Replace `pattern` with `substitution` in `str`.\n */\n\nexports.replace = function(str, pattern, substitution){\n  return String(str).replace(pattern, substitution || '');\n};\n\n/**\n * Prepend `val` to `obj`.\n */\n\nexports.prepend = function(obj, val){\n  return Array.isArray(obj)\n    ? [val].concat(obj)\n    : val + obj;\n};\n\n/**\n * Append `val` to `obj`.\n */\n\nexports.append = function(obj, val){\n  return Array.isArray(obj)\n    ? obj.concat(val)\n    : obj + val;\n};\n\n/**\n * Map the given `prop`.\n */\n\nexports.map = function(arr, prop){\n  return arr.map(function(obj){\n    return obj[prop];\n  });\n};\n\n/**\n * Reverse the given `obj`.\n */\n\nexports.reverse = function(obj){\n  return Array.isArray(obj)\n    ? obj.reverse()\n    : String(obj).split('').reverse().join('');\n};\n\n/**\n * Get `prop` of the given `obj`.\n */\n\nexports.get = function(obj, prop){\n  return obj[prop];\n};\n\n/**\n * Packs the given `obj` into json string\n */\nexports.json = function(obj){\n  return JSON.stringify(obj);\n};\n\n},{}],5:[function(require,module,exports){\n\n/*!\n * EJS\n * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>\n * MIT Licensed\n */\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function(html){\n  return String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&#39;')\n    .replace(/\"/g, '&quot;');\n};\n \n\n},{}],6:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n},{\"_process\":7}],7:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],8:[function(require,module,exports){\n/** 大度假问卷通用的js */\r\n\r\nwindow.ejs = require('ejs');\r\nwindow.ajax = require('../../common/js/ajax.js');\r\n\r\n/** 表单序列化 */\r\n$.fn.serializeObject = function()\r\n{\r\n   var o = {};\r\n   var a = this.serializeArray();\r\n   $.each(a, function() {\r\n       if (o[this.name]) {\r\n           if (!o[this.name].push) {\r\n               o[this.name] = [o[this.name]];\r\n           }\r\n           o[this.name].push(this.value || '');\r\n       } else {\r\n           o[this.name] = this.value || '';\r\n       }\r\n   });\r\n   return o;\r\n};\r\n\r\n/** 去空表单序列化 */\r\n$.fn.serializeObjectNull = function()\r\n{\r\n   var o = {};\r\n   var a = this.serializeArray();\r\n   $.each(a, function() {\r\n       if (o[this.name]) {\r\n           if (!o[this.name].push) {\r\n               o[this.name] = [o[this.name]];\r\n           }\r\n           if(this.value){\r\n               o[this.name].push(this.value);\r\n           }\r\n       } else {\r\n           this.value ? o[this.name] = this.value : \"\";\r\n       }\r\n   });\r\n   return o;\r\n};\r\n\r\n(function () {\r\n    var app = {\r\n        \r\n        init: function () {\r\n            this.initTimer();\r\n            this.initEvent();\r\n        },\r\n        //开启定时器, 这个定时器是为了bigpipe才设置的\r\n        initTimer: function () {\r\n            var _ = this;\r\n\r\n            \r\n        },\r\n        //初始化监听事件\r\n        initEvent: function () {\r\n\r\n        },\r\n        initNav: function () {\r\n            var html = ejs.render(this.tpl.nav, { pageName: pageName });\r\n            $('#menuNav').replaceWith(html);\r\n        },\r\n        //获取登录员工的信息\r\n        getUser: function () {\r\n            var str = $('#SV_USER').val();\r\n            var data = JSON.parse(decodeURIComponent(str) || '{}');\r\n            return {\r\n                key: data.workId,\r\n                value: data.username\r\n            };\r\n        }\r\n    }\r\n\r\n    window.app = {\r\n        getUser:app.getUser\r\n    }\r\n\r\n    app.init();\r\n\r\n})();\n},{\"../../common/js/ajax.js\":1,\"ejs\":3}]},{},[8]);\n"],"file":"apps.js"}